/*
	breakpoint mixins
	usage example:
	@include respond-max($tablet-max) {
		width: 100%;
	}
	
	@include respond-max($mobile-max) {		
		width: 100%;
	}
*/
@mixin respond-max($breakpoint) {
    @media only screen and (max-width: $breakpoint) { @content; }
}

@mixin respond-min($breakpoint) {
    @media only screen and (min-width: $breakpoint) { @content; }
}

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
}

@mixin link-inherit() {
	text-transform: inherit;
	color: inherit;
	text-decoration: none;
	line-height: inherit;
	font-family: inherit;
	font-size: inherit;
}

/* 
	text conversion mixins
	usage example: 
	p {
	  @include font-size(14px);
	}
*/
@function calculateRem($size) {
	$remSize: $size / $base-font-size;	
	@return $remSize * 1rem;
}

@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);	
}

/* you can use ems instead of rems */
@function em($px, $base: $base-font-size) {
    @return ($px / $base) * 1em;
}

/*
	transitions mixin
	usage example:
	a {
		color: gray;
			@include transition(color .3s ease);
			&:hover {
			color: black;
		}
	}
*/
@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
}

@mixin transition-delay($transition-delay) {
	-webkit-transition-delay: $transition-delay;
	-moz-transition-delay:    $transition-delay;
	-ms-transition-delay:     $transition-delay;
	-o-transition-delay:      $transition-delay;
	transition-delay:		  $transition-delay;
}

/*
	cross browser opacity mixin
	usage example:
	.faded-text {
		@include opacity(0.8);
	}
*/
@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

/*
	basic pulsate
	usage example:
	.pulsating-text {
		@include pulsate();
	}
*/
@mixin pulsate() {
	-webkit-animation: pulsate 6s ease-in-out;
	-moz-animation: pulsate 6s ease-in-out;
	-o-animation: pulsate 6s ease-in-out;
	animation: pulsate 5s ease-in-out;
	-webkit-animation-iteration-count: infinite;
	-moz-animation-iteration-count: infinite;
	-o-animation-iteration-count: infinite;
	animation-iteration-count: infinite;

	@-webkit-keyframes pulsate {
		/* line 539, ../sass/_styles.scss */
		0% {
			-webkit-transform: scale(1, 1);
			opacity: 1.0;
		}

		/* line 544, ../sass/_styles.scss */
		25% {
			-webkit-transform: scale(0.8, 0.8);
			opacity: 0.8;
		}

		/* line 549, ../sass/_styles.scss */
		50% {
			-webkit-transform: scale(1, 1);
			opacity: 1.0;
		}

		/* line 554, ../sass/_styles.scss */
		100% {
			-webkit-transform: scale(1, 1);
			opacity: 1.0;
		}
	}

	@-moz-keyframes pulsate {
	    /* line 561, ../sass/_styles.scss */
	    0% {
	        -moz-transform: scale(1, 1);
	        opacity: 1.0;
	    }

	    /* line 566, ../sass/_styles.scss */
	    25% {
	        -moz-transform: scale(0.8, 0.8);
	        opacity: 0.8;
	    }

	    /* line 571, ../sass/_styles.scss */
	    50% {
	        -moz-transform: scale(1, 1);
	        opacity: 1.0;
	    }

	    /* line 576, ../sass/_styles.scss */
	    100% {
	        -moz-transform: scale(1, 1);
	        opacity: 1.0;
	    }
	}

	@-o-keyframes pulsate {
	  /* line 582, ../sass/_styles.scss */
	  0% {
	        -o-transform: scale(1, 1);
	        opacity: 1.0;
	  }

	  /* line 587, ../sass/_styles.scss */
	  25% {
	        -o-transform: scale(0.8, 0.8);
	        opacity: 0.8;
	  }

	  /* line 592, ../sass/_styles.scss */
	  50% {
	        -o-transform: scale(1, 1);
	        opacity: 1.0;
	  }

	  /* line 597, ../sass/_styles.scss */
	  100% {
	        -o-transform: scale(1, 1);
	        opacity: 1.0;
	  }
	}

	@keyframes pulsate {
	    /* line 603, ../sass/_styles.scss */
	    0% {
	        transform: scale(1, 1);
	        opacity: 1.0;
	    }

	    /* line 608, ../sass/_styles.scss */
	    25% {
	        transform: scale(0.8, 0.8);
	        opacity: 0.8;
	    }

	    /* line 613, ../sass/_styles.scss */
	    50% {
	        transform: scale(1, 1);
	        opacity: 1.0;
	    }

	    /* line 618, ../sass/_styles.scss */
	    100% {
	        transform: scale(1, 1);
	        opacity: 1.0;
	    }
	}
}

@mixin nopulsate() {
	-webkit-animation: none;
	-moz-animation: none;
	-o-animation: none;
	animation: none;
	-webkit-animation-iteration-count: none;
	-moz-animation-iteration-count: none;
	-o-animation-iteration-count: none;
	animation-iteration-count: none;
}

/*
	clearfix mixin
	usage example:
	.container-with-floated-children {
		@extend %clearfix;
	}
*/
%clearfix {
	*zoom: 1;
	&:before, &:after {
		content: " ";
		display: table;
	}
		&:after {
		clear: both;
	}
}

/* 
	visually hidden mixin. Hide things without making them inaccessible to a screen reader, unlike display: none
	usage example:
	<button class="mobile-navigation-trigger">
		<b class="visually-hidden">Open the navigation</b>
		<img src="img/mobile-navigation-icon.svg">
	</button>
*/
%visuallyhidden {
	margin: -1px;
	padding: 0;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(0 0 0 0);
	clip: rect(0, 0, 0, 0);
	position: absolute;
}

/* border radius mixin */
@mixin border-radius($radius) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	border-radius: $radius;
	background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

/* box shadow mixin */
@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
	-webkit-box-shadow:$top $left $blur $color #{$inset};
	-moz-box-shadow:$top $left $blur $color #{$inset};
	box-shadow:$top $left $blur $color #{$inset};
}

/* filter mixin */
@mixin filter( $var ) {
	-webkit-filter: $var;
	-moz-filter: $var;
	-ms-filter: $var;
	-o-filter: $var;
	filter: $var;
}